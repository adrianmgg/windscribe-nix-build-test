From 08278a209a55f27b904be9dd9ce046fd39e0b7cc Mon Sep 17 00:00:00 2001
From: amgg <2adrian2@gmail.com>
Date: Thu, 30 May 2024 18:07:03 -0400
Subject: [PATCH 3/3] qasconst to std as_const

---
 .../utils/network_utils/network_utils_linux.cpp     |  7 ++++---
 .../customconfigs/customconfigsdirwatcher.cpp       |  3 ++-
 .../engine/engine/dnsresolver/dnsresolver_win.cpp   |  3 ++-
 client/engine/engine/dnsresolver/dnsutils_mac.cpp   |  3 ++-
 .../macaddresscontroller_mac.cpp                    |  3 ++-
 .../networkaccessmanager/curlnetworkmanager_impl.h  |  3 ++-
 .../networkaccessmanager/whitelistipsmanager.cpp    |  5 +++--
 client/engine/engine/ping/pingmanager.cpp           |  3 ++-
 .../pingmultiplehosts.test.cpp                      |  7 ++++---
 client/engine/utils/installedantiviruses_win.cpp    |  3 ++-
 client/gui/commongraphics/basepage.cpp              |  9 +++++----
 client/gui/locations/model/locationsmodel.cpp       |  3 ++-
 .../model/proxymodels/cities_proxymodel.cpp         |  3 ++-
 client/gui/locations/view/expandableitemswidget.cpp | 13 +++++++------
 client/gui/preferenceswindow/comboboxitem.cpp       |  3 ++-
 .../gui/preferenceswindow/preferenceswindowitem.cpp |  3 ++-
 client/gui/utils/scaleutils_win.cpp                 |  5 +++--
 client/gui/utils/shadowmanager.cpp                  |  3 ++-
 gui/logviewer/logdata.cpp                           |  3 ++-
 19 files changed, 52 insertions(+), 33 deletions(-)

diff --git a/client/common/utils/network_utils/network_utils_linux.cpp b/client/common/utils/network_utils/network_utils_linux.cpp
index 5ddece56..d4c05806 100644
--- a/client/common/utils/network_utils/network_utils_linux.cpp
+++ b/client/common/utils/network_utils/network_utils_linux.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "network_utils_linux.h"
 
 #include <QtAlgorithms>
@@ -89,7 +90,7 @@ void getDefaultRoute(QString &outGatewayIp, QString &outInterfaceName, QString &
     int lowestMetric = INT32_MAX;
 
     QList<RoutingTableEntry> entries = getRoutingTable(false);
-    for (const RoutingTableEntry& entry : qAsConst(entries)) {
+    for (const RoutingTableEntry& entry : std::as_const(entries)) {
         // only consider routes which have a destination of 0.0.0.0.
         // filtering by metric alone is not enough, because when an interface first comes up, network manager will add 20000 to the metric
         // if it has not yet passed a connectivity check
@@ -101,7 +102,7 @@ void getDefaultRoute(QString &outGatewayIp, QString &outInterfaceName, QString &
     }
 
     if (lowestMetric != INT32_MAX) {
-        for (const RoutingTableEntry& entry : qAsConst(entries)) {
+        for (const RoutingTableEntry& entry : std::as_const(entries)) {
             if (outInterfaceName == entry.interface && !entry.gateway.isEmpty()) {
                 outGatewayIp = entry.gateway;
                 break;
@@ -125,7 +126,7 @@ QString getLocalIP()
     int lowestMetric = INT32_MAX;
 
     QList<RoutingTableEntry> entries = getRoutingTable(false);
-    for (const RoutingTableEntry& entry : qAsConst(entries)) {
+    for (const RoutingTableEntry& entry : std::as_const(entries)) {
         QString adapterIp = getAdapterIp(entry.interface);
         if (!adapterIp.isEmpty() && entry.metric < lowestMetric) {
             lowestMetric = entry.metric;
diff --git a/client/engine/engine/customconfigs/customconfigsdirwatcher.cpp b/client/engine/engine/customconfigs/customconfigsdirwatcher.cpp
index 220c1783..d9d6daa2 100644
--- a/client/engine/engine/customconfigs/customconfigsdirwatcher.cpp
+++ b/client/engine/engine/customconfigs/customconfigsdirwatcher.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "customconfigsdirwatcher.h"
 
 #include <QDir>
@@ -47,7 +48,7 @@ void CustomConfigsDirWatcher::onEmitTimer()
 void CustomConfigsDirWatcher::checkFiles(bool bWithEmitSignal, bool bFileChanged)
 {
     // remove prev files from watch paths
-    for (const QString &filename : qAsConst(curFiles_))
+    for (const QString &filename : std::as_const(curFiles_))
     {
         dirWatcher_.removePath(path_ + "/" + filename);
     }
diff --git a/client/engine/engine/dnsresolver/dnsresolver_win.cpp b/client/engine/engine/dnsresolver/dnsresolver_win.cpp
index 0392f931..ce80fecf 100644
--- a/client/engine/engine/dnsresolver/dnsresolver_win.cpp
+++ b/client/engine/engine/dnsresolver/dnsresolver_win.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "dnsresolver_win.h"
 #include "utils/logger.h"
 
@@ -203,7 +204,7 @@ DnsResolver_win::~DnsResolver_win()
     std::vector<DNS_QUERY_CANCEL> cancels;
     {
         QMutexLocker locker(&activeDnsRequests_->mutex);
-        for (const auto it : qAsConst(activeDnsRequests_->queries)) {
+        for (const auto it : std::as_const(activeDnsRequests_->queries)) {
             cancels.push_back(it->dnsQueryCancel);
         }
     }
diff --git a/client/engine/engine/dnsresolver/dnsutils_mac.cpp b/client/engine/engine/dnsresolver/dnsutils_mac.cpp
index 24837e46..21998502 100644
--- a/client/engine/engine/dnsresolver/dnsutils_mac.cpp
+++ b/client/engine/engine/dnsresolver/dnsutils_mac.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "dnsutils.h"
 #include "utils/logger.h"
 
@@ -34,7 +35,7 @@ std::vector<std::wstring> getOSDefaultDnsServers()
         }
     }
 
-    for (const QString &s : qAsConst(ips))
+    for (const QString &s : std::as_const(ips))
     {
         dnsServers.push_back(s.toStdWString());
     }
diff --git a/client/engine/engine/macaddresscontroller/macaddresscontroller_mac.cpp b/client/engine/engine/macaddresscontroller/macaddresscontroller_mac.cpp
index b9117033..ad46a618 100644
--- a/client/engine/engine/macaddresscontroller/macaddresscontroller_mac.cpp
+++ b/client/engine/engine/macaddresscontroller/macaddresscontroller_mac.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "macaddresscontroller_mac.h"
 
 #include "utils/logger.h"
@@ -328,7 +329,7 @@ void MacAddressController_mac::removeSpoofs(QMap<QString, QString> spoofsToRemov
     for (const QString &removeInterface : spoofsToRemoveKeys) {
         networksBeingUpdated_.append(removeInterface);
     }
-    for (const QString &removeInterface : qAsConst(networksBeingUpdated_)) {
+    for (const QString &removeInterface : std::as_const(networksBeingUpdated_)) {
         qCDebug(LOG_BASIC) << "Removing spoof: " << removeInterface;
         removeMacAddressSpoof(removeInterface);
     }
diff --git a/client/engine/engine/networkaccessmanager/curlnetworkmanager_impl.h b/client/engine/engine/networkaccessmanager/curlnetworkmanager_impl.h
index b0f06fb8..774dc35f 100644
--- a/client/engine/engine/networkaccessmanager/curlnetworkmanager_impl.h
+++ b/client/engine/engine/networkaccessmanager/curlnetworkmanager_impl.h
@@ -1,3 +1,4 @@
+#include <utility>
 #pragma once
 
 #include <QMutex>
@@ -73,7 +74,7 @@ private:
                     delete id;
                 curl_easy_cleanup(curlEasyHandle);
             }
-            for (struct curl_slist *list : qAsConst(curlLists))
+            for (struct curl_slist *list : std::as_const(curlLists))
                 curl_slist_free_all(list);
         }
     };
diff --git a/client/engine/engine/networkaccessmanager/whitelistipsmanager.cpp b/client/engine/engine/networkaccessmanager/whitelistipsmanager.cpp
index 7ceaa9b6..03a1b414 100644
--- a/client/engine/engine/networkaccessmanager/whitelistipsmanager.cpp
+++ b/client/engine/engine/networkaccessmanager/whitelistipsmanager.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "whitelistipsmanager.h"
 
 WhitelistIpsManager::WhitelistIpsManager(QObject *parent) : QObject(parent)
@@ -7,7 +8,7 @@ WhitelistIpsManager::WhitelistIpsManager(QObject *parent) : QObject(parent)
 void WhitelistIpsManager::add(const QStringList &ips)
 {
     bool bChanged = false;
-    for (const auto &it : qAsConst(ips)) {
+    for (const auto &it : std::as_const(ips)) {
         if (!ips_.contains(it)) {
             ips_.insert(it);
             bChanged = true;
@@ -20,7 +21,7 @@ void WhitelistIpsManager::add(const QStringList &ips)
 void WhitelistIpsManager::remove(const QStringList &ips)
 {
     bool bChanged = false;
-    for (const auto &it : qAsConst(ips)) {
+    for (const auto &it : std::as_const(ips)) {
         if (ips_.remove(it))
             bChanged = true;
     }
diff --git a/client/engine/engine/ping/pingmanager.cpp b/client/engine/engine/ping/pingmanager.cpp
index d4dd35dd..49283a42 100644
--- a/client/engine/engine/ping/pingmanager.cpp
+++ b/client/engine/engine/ping/pingmanager.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "pingmanager.h"
 
 #include "../connectstatecontroller/iconnectstatecontroller.h"
@@ -21,7 +22,7 @@ void PingManager::updateIps(const QVector<PingIpInfo> &ips)
         it.value().existThisIp = false;
     }
 
-    for (const PingIpInfo &ip_info : qAsConst(ips)) {
+    for (const PingIpInfo &ip_info : std::as_const(ips)) {
         auto it = ips_.find(ip_info.ip);
         if (it == ips_.end()) {
             pingStorage_.initPingDataIfNotExists(ip_info.ip);
diff --git a/client/engine/engine/ping/tests/pingmultiplehosts_test/pingmultiplehosts.test.cpp b/client/engine/engine/ping/tests/pingmultiplehosts_test/pingmultiplehosts.test.cpp
index cbc83a38..7be7df44 100644
--- a/client/engine/engine/ping/tests/pingmultiplehosts_test/pingmultiplehosts.test.cpp
+++ b/client/engine/engine/ping/tests/pingmultiplehosts_test/pingmultiplehosts.test.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "pingmultiplehosts.test.h"
 #include <QtTest>
 #include <QtConcurrent/QtConcurrent>
@@ -36,16 +37,16 @@ void PingMultiplePings_test::testBasic()
     });
 
     PingType pt = PingType::kTcp;
-    for (const auto &ip : qAsConst(testIps_)) {
+    for (const auto &ip : std::as_const(testIps_)) {
         pingHosts.addHostForPing(ip.first, ip.second, pt);
         pt = getNextPingType(pt);
     }
 
-    for (const auto &ip : qAsConst(testFailedIps_)) {
+    for (const auto &ip : std::as_const(testFailedIps_)) {
         pingHosts.addHostForPing(ip.first, ip.second, PingType::kIcmp);
     }
 
-    for (const auto &ip : qAsConst(testIps_)) {
+    for (const auto &ip : std::as_const(testIps_)) {
         pingHosts.addHostForPing(ip.first, ip.second, PingType::kIcmp);
     }
 
diff --git a/client/engine/utils/installedantiviruses_win.cpp b/client/engine/utils/installedantiviruses_win.cpp
index 317e3c61..ff974e02 100644
--- a/client/engine/utils/installedantiviruses_win.cpp
+++ b/client/engine/utils/installedantiviruses_win.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "installedantiviruses_win.h"
 #include <comdef.h>
 #include "utils/ws_assert.h"
@@ -15,7 +16,7 @@ void InstalledAntiviruses_win::outToLog()
     getSecurityCenter(L"ROOT\\SecurityCenter2");
 
     QList<AntivirusInfo> listAntiViruses, listSpywares, listFirewalls;
-    for (const AntivirusInfo &ai : qAsConst(list))
+    for (const AntivirusInfo &ai : std::as_const(list))
     {
         if (ai.productType == PT_SPYWARE)
         {
diff --git a/client/gui/commongraphics/basepage.cpp b/client/gui/commongraphics/basepage.cpp
index 86d2c239..d0f4f2c4 100644
--- a/client/gui/commongraphics/basepage.cpp
+++ b/client/gui/commongraphics/basepage.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "basepage.h"
 #include "utils/logger.h"
 
@@ -110,7 +111,7 @@ void BasePage::setIndent(int indent)
 
 void BasePage::hideOpenPopups()
 {
-    for (BaseItem *item : qAsConst(items_))
+    for (BaseItem *item : std::as_const(items_))
     {
         item->hideOpenPopups();
     }
@@ -124,7 +125,7 @@ void BasePage::updateScaling()
 
 bool BasePage::hasItemWithFocus()
 {
-    for (BaseItem *item : qAsConst(items_))
+    for (BaseItem *item : std::as_const(items_))
     {
         if (item->hasItemWithFocus())
         {
@@ -142,7 +143,7 @@ QList<BaseItem *> BasePage::items() const
 void BasePage::recalcItemsPos()
 {
     int newHeight = firstItemOffset_*G_SCALE;
-    for (BaseItem *item : qAsConst(items_))
+    for (BaseItem *item : std::as_const(items_))
     {
         if (!item->isVisible())
             continue;
@@ -163,7 +164,7 @@ int BasePage::fullHeight() const
 {
     int height = firstItemOffset_*G_SCALE;
 
-    for (BaseItem *item : qAsConst(items_)) {
+    for (BaseItem *item : std::as_const(items_)) {
         height += item->boundingRect().height() + spacerHeight_*G_SCALE;
     }
     height += endSpacing_*G_SCALE;
diff --git a/client/gui/locations/model/locationsmodel.cpp b/client/gui/locations/model/locationsmodel.cpp
index 97be6549..877b0672 100644
--- a/client/gui/locations/model/locationsmodel.cpp
+++ b/client/gui/locations/model/locationsmodel.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "locationsmodel.h"
 #include "locationsmodel_utils.h"
 #include "../locationsmodel_roles.h"
@@ -643,7 +644,7 @@ QVariant LocationsModel::dataForCity(LocationItem *l, int row, int role) const
 
 void LocationsModel::clearLocations()
 {
-    for (auto it : qAsConst(locations_))
+    for (auto it : std::as_const(locations_))
     {
         delete it;
     }
diff --git a/client/gui/locations/model/proxymodels/cities_proxymodel.cpp b/client/gui/locations/model/proxymodels/cities_proxymodel.cpp
index acf1fa38..ec19574f 100644
--- a/client/gui/locations/model/proxymodels/cities_proxymodel.cpp
+++ b/client/gui/locations/model/proxymodels/cities_proxymodel.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "cities_proxymodel.h"
 #include "utils/ws_assert.h"
 
@@ -18,7 +19,7 @@ void CitiesProxyModel::setSourceModel(QAbstractItemModel *sourceModel)
     beginResetModel();
     if (this->sourceModel())
     {
-        for (const QMetaObject::Connection& discIter : qAsConst(sourceConnections_))
+        for (const QMetaObject::Connection& discIter : std::as_const(sourceConnections_))
             disconnect(discIter);
     }
     sourceConnections_.clear();
diff --git a/client/gui/locations/view/expandableitemswidget.cpp b/client/gui/locations/view/expandableitemswidget.cpp
index fd3414fe..87baba0e 100644
--- a/client/gui/locations/view/expandableitemswidget.cpp
+++ b/client/gui/locations/view/expandableitemswidget.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "expandableitemswidget.h"
 
 #include <QDebug>
@@ -281,7 +282,7 @@ void ExpandableItemsWidget::paintEvent(QPaintEvent *event)
 {
     QPainter painter(this);
     QVector<ItemRect> items = getItemRects();
-    for (const auto &item : qAsConst(items)) {
+    for (const auto &item : std::as_const(items)) {
         IItemDelegate *delegate = delegateForItem(item.modelIndex);
         double expandedProgress;
         if (item.modelIndex == expandingItem_)
@@ -416,7 +417,7 @@ void ExpandableItemsWidget::resetItemsList()
 QPersistentModelIndex ExpandableItemsWidget::detectSelectedItem(const QPoint &pt, QRect *outputRect)
 {
     QVector<ItemRect> items = getItemRects();
-    for (const auto &item : qAsConst(items)) {
+    for (const auto &item : std::as_const(items)) {
         if (item.rc.contains(pt)) {
             if (outputRect) {
                 *outputRect = item.rc;
@@ -445,7 +446,7 @@ bool ExpandableItemsWidget::isExpandableItem(const QPersistentModelIndex &ind)
 void ExpandableItemsWidget::updateHeight()
 {
     int curHeight = 0;
-    for (const auto &it : qAsConst(items_)) {
+    for (const auto &it : std::as_const(items_)) {
         curHeight += itemHeight_;
         if (expandedItems_.contains(it)) {
             if (it == expandingItem_)
@@ -477,7 +478,7 @@ int ExpandableItemsWidget::calcHeightOfChildItems(const QPersistentModelIndex &i
 int ExpandableItemsWidget::getOffsForTopLevelItem(const QPersistentModelIndex &ind)
 {
     int top = 0;
-    for (const auto &it : qAsConst(items_)) {
+    for (const auto &it : std::as_const(items_)) {
         if (it == ind)
             return top;
         top += itemHeight_;
@@ -565,7 +566,7 @@ void ExpandableItemsWidget::setupExpandingAnimation(QAbstractAnimation::Directio
 void ExpandableItemsWidget::closeAndClearAllActiveTooltips(const QPersistentModelIndex &modelIndex)
 {
     WS_ASSERT(modelIndex.isValid());
-    for (auto id : qAsConst(hoveringToolTips_)) {
+    for (auto id : std::as_const(hoveringToolTips_)) {
         delegateForItem(modelIndex)->tooltipLeaveEvent(id);
     }
     hoveringToolTips_.clear();
@@ -669,7 +670,7 @@ QVector<ExpandableItemsWidget::ItemRect> ExpandableItemsWidget::getItemRects()
     result.reserve(items_.count() * 3);
     int top = 0;
 
-    for (const auto &it : qAsConst(items_)) {
+    for (const auto &it : std::as_const(items_)) {
         bool isExpandedItem = expandedItems_.contains(it);
         QRect rcItem = QRect(0, top, size().width(), itemHeight_);
         result << ItemRect{it, rcItem, isExpandedItem};
diff --git a/client/gui/preferenceswindow/comboboxitem.cpp b/client/gui/preferenceswindow/comboboxitem.cpp
index b66a203d..d5f28360 100644
--- a/client/gui/preferenceswindow/comboboxitem.cpp
+++ b/client/gui/preferenceswindow/comboboxitem.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "comboboxitem.h"
 
 #include <QCursor>
@@ -112,7 +113,7 @@ void ComboBoxItem::removeItem(const QVariant &value)
 
 void ComboBoxItem::setCurrentItem(QVariant value)
 {
-    for (const ComboBoxItemDescr &cb : qAsConst(items_))
+    for (const ComboBoxItemDescr &cb : std::as_const(items_))
     {
         if (cb.userValue() == value)
         {
diff --git a/client/gui/preferenceswindow/preferenceswindowitem.cpp b/client/gui/preferenceswindow/preferenceswindowitem.cpp
index 1a566fd5..5549fda1 100644
--- a/client/gui/preferenceswindow/preferenceswindowitem.cpp
+++ b/client/gui/preferenceswindow/preferenceswindowitem.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "preferenceswindowitem.h"
 
 #include <QPainter>
@@ -483,7 +484,7 @@ void PreferencesWindowItem::onSplitTunnelingAddressesClick()
 void PreferencesWindowItem::updateSplitTunnelingAppsCount(QList<types::SplitTunnelingApp> apps)
 {
     int activeApps = 0;
-    for (types::SplitTunnelingApp app : qAsConst(apps)) {
+    for (types::SplitTunnelingApp app : std::as_const(apps)) {
         if (app.active) activeApps++;
     }
     splitTunnelingWindowItem_->setAppsCount(activeApps);
diff --git a/client/gui/utils/scaleutils_win.cpp b/client/gui/utils/scaleutils_win.cpp
index 5c5e98b0..6fece9ce 100644
--- a/client/gui/utils/scaleutils_win.cpp
+++ b/client/gui/utils/scaleutils_win.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "scaleutils_win.h"
 
 namespace ScaleUtils_win {
@@ -48,7 +49,7 @@ double closestScaleFactor(double value, QList<double> set)
     double closest = 1.0;
     double closestDiff = fabs(value - closest);
 
-    for (double scale_factor : qAsConst(set))
+    for (double scale_factor : std::as_const(set))
     {
         double diff = fabs(value - scale_factor);
         if (diff < closestDiff)
@@ -66,7 +67,7 @@ double closestLargerScaleFactor(double value, QList<double> set)
     double closest = 1.0;
     double closestDiff = 99999;
 
-    for (double scale_factor : qAsConst(set))
+    for (double scale_factor : std::as_const(set))
     {
         if (value < scale_factor)
         {
diff --git a/client/gui/utils/shadowmanager.cpp b/client/gui/utils/shadowmanager.cpp
index 250dda12..cafbb204 100644
--- a/client/gui/utils/shadowmanager.cpp
+++ b/client/gui/utils/shadowmanager.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "shadowmanager.h"
 
 #include <QPainter>
@@ -224,7 +225,7 @@ void ShadowManager::updateShadow()
 
     {
         QPainter painter(&pixmap);
-        for (const ShadowObject &so : qAsConst(objects_))
+        for (const ShadowObject &so : std::as_const(objects_))
         {
             if (so.isVisible)
             {
diff --git a/gui/logviewer/logdata.cpp b/gui/logviewer/logdata.cpp
index 2cc668cb..b7ba05a8 100644
--- a/gui/logviewer/logdata.cpp
+++ b/gui/logviewer/logdata.cpp
@@ -1,3 +1,4 @@
+#include <utility>
 #include "logdata.h"
 
 #include <QFile>
@@ -130,7 +131,7 @@ void LogData::addLines(QStringList lines, LogDataType type, quint32 index,
     default:
         break;
     }
-    for (auto &line : qAsConst(lines)) {
+    for (auto &line : std::as_const(lines)) {
         processLine(line, type, index, kCurrentYearOffset,
             (rangeCheck != LogRangeCheckType::NONE) ? range : nullptr);
     }
-- 
2.44.1

